recorte.txt for


C:\xampp\htdocs\cgpdashboard\resources\model_schemas\historialoperaciones.json

<div class="small-box bg-info">
    <div class="inner">
        <h3>150</h3>
        <p>New Orders</p>
    </div>
    <div class="icon">
        <i class="ion ion-bag"></i>
    </div>
    <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
</div>



       //dd($opcion);

        $hoy = getdate();


        $opcion = 0 ;

        switch ($opcion) {
            case "0":
                $cMes = substr("00".$hoy["mon"],-2);
                //$cMes = "09";

                

                $cAnio = substr($hoy["year"],-4);
                //$cAnio = "2019" ;

                $mes = "Agosto 2022";
                //echo "i es igual a 0";
                // NECESITO OBTENER EL PERIODO ACTUAL

                $cPeriodo = $cAnio.$cMes ;
                // '201909'

                $mes = substr($hoy["month"],-10)." ".$cAnio ;


                break;
            case "202207":
                $cMes = "07";
                $cAnio = "2022" ;
                $mes = "Julio 2022";
                $cPeriodo = $cAnio.$cMes ;                
                break;
    
            default:
                $cMes = substr($opcion ,-2);
                $cAnio = substr($opcion ,0,4);
                $cPeriodo = $cAnio.$cMes ;                                
                $mes = $opcion ;                
                break;            

            

        }

EJEMPLO DE PIE CHART COSMETICOS

<script>
anychart.onDocumentReady(function() {
    // create pie chart
    var chart = anychart.pie();

    // set chart title
    chart.title('Top 10 Cosmetic Products by Revenue');

    // set chart data
    chart.data([
        {x: 'Rouge', value: 80540},
        {x: 'Foundation', value: 94190},
        {x: 'Mascara', value: 102610},
        {x: 'Lip gloss', value: 110430},
        {x: 'Pomade', value: 128000}
    ]);

    // set container id for the chart
    chart.container('div_pie');

    // initiate chart drawing
    chart.draw();
});

</script>




<script>
    var url4 = "{{ url('uor') }}";
    var Etiquetas4 = new Array();
    var Cantidades4 = new Array();

    $(document).ready(function() {
        $.get(url4, function(response) {
            response.forEach(function(data) {
                Etiquetas4.push(data.uor);
                Cantidades4.push(data.cantidad);
            });
            var ctx4 = document.getElementById("canvas_uor").getContext('2d');
            var myChart = new Chart(ctx4, {
                type: 'bar', // Cambia el tipo a 'bar'
                data: {
                    labels: Etiquetas4,
                    datasets: [{
                        data: Cantidades4,
                        backgroundColor: [
                            '#FF1493', // Rosa
                            '#00BFFF', // Celeste
                            '#808080', // Gris
                            '#FF4500', // Naranja
                            '#32CD32', // Verde
                            '#FFD700', // Amarillo
                            '#8A2BE2', // Morado
                            '#1E90FF', // Azul claro
                            '#FF6347' // Rojo coral
                        ],
                        borderColor: [
                            'rgba(205, 71, 43, 1)', // Borde rosa
                            'rgba(255, 206, 86, 1)', // Borde celeste
                            'rgba(75, 192, 192, 1)', // Borde gris
                            'rgba(255, 69, 0, 1)', // Borde naranja
                            'rgba(50, 205, 50, 1)', // Borde verde
                            'rgba(255, 215, 0, 1)', // Borde amarillo
                            'rgba(138, 43, 226, 1)', // Borde morado
                            'rgba(30, 144, 255, 1)', // Borde azul claro
                            'rgba(255, 99, 71, 1)' // Borde rojo coral
                        ],
                        borderWidth: 1
                    }]

                },
                options: {
                    title: {
                        display: false,
                        text: 'UOR'
                    },
                    layout: {
                        padding: {
                            left: 2,
                            right: 2,
                            top: 2,
                            bottom: 2
                        }
                    },
                    legend: {
                        display: false // Oculta las etiquetas
                    }
                }
            });
        });
    });
</script>

<script>

anychart.onDocumentReady(function () {
    // Obtener los datos desde la API REST en Laravel
    console.log('entra al grafico anychart');
    fetch('http://localhost:8000/uor') // Reemplaza 'ruta_de_tu_api' con la URL correcta de tu API Laravel
        .then(response => response.json())
        .then(jsonData => {
            // Convertir los datos a la estructura de datos de AnyChart

           
            var data = anychart.data.tree(jsonData, 'as-table');
            console.log('hizo la peticion', data  );

            // Crear el TreeMap
            var chart = anychart.treeMap(data);

            chart.title('Distribución por UOR');
            chart.container('containera');
            chart.draw();
        })
        .catch(error => console.error('Error al obtener los datos desde la API:', error));
});

</script>

Route::get('planta','App\Http\Controllers\M4dashboardController@planta') ->name('planta');


BARRA HORIZONTAL ESTILO USOPEN
    <div class="row">
        <div class="col-lg-12">
            <div class="card ">
                <div class="card-body  barra-horizontal">
                    <div class="row">
                        <div class="col-md-6">
                            <h1>Fecha de hoy:</h1>
                            <p style="font-size: 24px;">{{ \Carbon\Carbon::now()->format('Y-m-d') }}</p>
                        </div>
                        <div class="col-md-6">
                            <h1>Periodo de actualización:</h1>
                            <p style="font-size: 24px;">202308</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


BARRA HORIZONTAL BLANCA


    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-40 py-2">
            <div class="card-body">
                <!-- INFO PERIODO -->
                <div class="periodo-info">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Datos actualizados en mes</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">Agosto 2023</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-calendar fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>

                <!-- INFO DIA -->
                <div class="info-dia">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Fecha de Hoy</div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">14/09/2023</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-calendar fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



// Set new default font family and font color to mimic Bootstrap's default styling
Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
Chart.defaults.global.defaultFontColor = '#858796';

function number_format(number, decimals, dec_point, thousands_sep) {
  // *     example: number_format(1234.56, 2, ',', ' ');
  // *     return: '1 234,56'
  number = (number + '').replace(',', '').replace(' ', '');
  var n = !isFinite(+number) ? 0 : +number,
    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
    s = '',
    toFixedFix = function(n, prec) {
      var k = Math.pow(10, prec);
      return '' + Math.round(n * k) / k;
    };
  // Fix for IE parseFloat(0.55).toFixed(0) = 0;
  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
  if (s[0].length > 3) {
    s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
  }
  if ((s[1] || '').length < prec) {
    s[1] = s[1] || '';
    s[1] += new Array(prec - s[1].length + 1).join('0');
  }
  return s.join(dec);
}

// Bar Chart Example
var ctx = document.getElementById("myBarChart");
var myBarChart = new Chart(ctx, {
  type: 'bar',
  data: {
    labels: ["January", "February", "March", "April", "May", "June"],
    datasets: [{
      label: "Revenue",
      backgroundColor: "#4e73df",
      hoverBackgroundColor: "#2e59d9",
      borderColor: "#4e73df",
      data: [4215, 5312, 6251, 7841, 9821, 14984],
    }],
  },
  options: {
    maintainAspectRatio: false,
    layout: {
      padding: {
        left: 10,
        right: 25,
        top: 25,
        bottom: 0
      }
    },
    scales: {
      xAxes: [{
        time: {
          unit: 'month'
        },
        gridLines: {
          display: false,
          drawBorder: false
        },
        ticks: {
          maxTicksLimit: 6
        },
        maxBarThickness: 25,
      }],
      yAxes: [{
        ticks: {
          min: 0,
          max: 15000,
          maxTicksLimit: 5,
          padding: 10,
          // Include a dollar sign in the ticks
          callback: function(value, index, values) {
            return '$' + number_format(value);
          }
        },
        gridLines: {
          color: "rgb(234, 236, 244)",
          zeroLineColor: "rgb(234, 236, 244)",
          drawBorder: false,
          borderDash: [2],
          zeroLineBorderDash: [2]
        }
      }],
    },
    legend: {
      display: false
    },
    tooltips: {
      titleMarginBottom: 10,
      titleFontColor: '#6e707e',
      titleFontSize: 14,
      backgroundColor: "rgb(255,255,255)",
      bodyFontColor: "#858796",
      borderColor: '#dddfeb',
      borderWidth: 1,
      xPadding: 15,
      yPadding: 15,
      displayColors: false,
      caretPadding: 10,
      callbacks: {
        label: function(tooltipItem, chart) {
          var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
          return datasetLabel + ': $' + number_format(tooltipItem.yLabel);
        }
      }
    },
  }
});
